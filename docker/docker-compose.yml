version: '3.7'
services:
  mongodb:
    image: mongo:latest
    container_name: 'mongodb-user-details-instance'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 24030911
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - secure-chat-net

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: secure_chat_user
      RABBITMQ_DEFAULT_PASS: 123456789
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - secure-chat-net

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - secure-chat-net

  authentication-service:
    container_name: 'authentication-service'
    image: gocheto8/jorji:authentication-service
    ports:
      - '9000:8080'
    networks:
      - secure-chat-net
    depends_on:
      - mongodb

  user-management-service:
    container_name: 'user-management-service'
    image: gocheto8/jorji:user-management-service
    ports:
      - '9001:8080'
    networks:
      - secure-chat-net
    depends_on:
      - mongodb

  routing-service:
    container_name: 'routing-service'
    image: gocheto8/jorji:routing-service
    ports:
      - '9004:8080'
    networks:
      - secure-chat-net
    depends_on:
      - mongodb
      - rabbitmq

  user-resolver-service:
    container_name: 'user-resolver-service'
    image: gocheto8/jorji:user-resolver-service
    ports:
      - '9005:8080'
    networks:
      - secure-chat-net
    depends_on:
      - mongodb


volumes:
  mongodb_data_container:

  rabbitmq_data:
    driver: local

networks:
  secure-chat-net:
    driver: bridge